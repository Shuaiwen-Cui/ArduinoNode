{"config":{"lang":["en","zh"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ArduinoNode","text":"<p>This project will show you how to build a simple IoT wireless sensor node/network using Arduino Uno R4 WiFi.</p> <p></p>"},{"location":"DATASHEET/datasheet/","title":"DATASHEET","text":""},{"location":"DATASHEET/datasheet/#main-controller","title":"Main Controller","text":"Item Specification MCU Renesas RA4M1 Clock Speed 48 MHz RAM 32 KB Flash Storage 256 KB"},{"location":"DATASHEET/datasheet/#acceleration-measurement","title":"Acceleration Measurement","text":"Item Specification Accelerometer MPU6050 Measurement Range \u00b12g / \u00b14g / \u00b18g / \u00b116g Resolution 16-bit Noise Level 0.0004 g/\u221aHz Typical Capacity 100 Hz * 25 s / 50 Hz * 50 s"},{"location":"DATASHEET/datasheet/#wireless-communication","title":"Wireless Communication","text":"<ul> <li>WiFi</li> <li>nRF24L01</li> </ul>"},{"location":"DATASHEET/datasheet/#storage","title":"Storage","text":"<ul> <li>32 GB SD card</li> </ul>"},{"location":"DATASHEET/datasheet/#power-supply","title":"Power Supply","text":"<ul> <li>Operating Voltage: 5V</li> <li>Power Module: 3.7V Li-ion battery (2 \u00d7 18650)</li> </ul>"},{"location":"HARDWARE/hardware/","title":"HARDWARE","text":"<p>Item List:</p> Component Description Arduino UNO R4 WiFi Main controller for the node, providing processing power and connectivity. Sensor Shield A shield that connects to the Arduino for easy sensor integration. MPU6050 An acceleration sensor that measures motion and orientation. SD Module &amp; Card Used for data storage, allowing the node to log sensor data. RGB LED Provides visual feedback, indicating the status of the node. Touch Sensor Allows user interaction, enabling control of the node. NRF24L01 Module &amp; Antenna Enables local wireless communication between nodes. BMS &amp; Battery Provides power to the entire node, making it portable. <p>Note</p> <p>These components together form a fully functional IoT wireless sensor node capable of collecting data, storing information, and communicating wirelessly. Each component plays a crucial role in ensuring the efficient operation and reliability of the node.</p>"},{"location":"HARDWARE/ACCELERATION/acceleration/","title":"ACCELERATION SENSOR -- MPU6050","text":"<p>MPU6050</p> <p>The MPU6050 is in fact an inertial measurement unit (IMU) that integrates a 3-axis gyroscope and a 3-axis accelerometer. It is widely used in various applications such as robotics, drones, and motion tracking. Here, we only use the accelerometer part of the MPU6050 to measure acceleration in three axes (X, Y, Z).</p> <p></p>"},{"location":"HARDWARE/ACCELERATION/acceleration/#specifications","title":"SPECIFICATIONS","text":"Feature Specification Operating Voltage 3.3V to 5V Communication Interface I2C Measurement Range \u00b12g, \u00b14g, \u00b18g, \u00b116g (configurable) Resolution 16 bits Sensitivity 16384 LSB/g (for \u00b12g range)"},{"location":"HARDWARE/ACCELERATION/acceleration/#wiring","title":"WIRING","text":"<p>The wiring of the MPU6050 is straightforward. It typically uses the I2C protocol for communication, which requires only two wires (SDA and SCL) in addition to power and ground connections.</p> <p></p> MCU Pin MPU6050 Pin VCC VCC GND GND SDA SDA SCL SCL -- INT <p>Note</p> <p>The INT pin is optional and can be used for interrupt-driven applications. For basic applications, you can leave it unconnected. In this project, we will not use the INT pin.</p>"},{"location":"HARDWARE/MCU/mcu/","title":"MAIN CONTROLLER BOARD","text":"<p>Main Controller Board</p> <p>In this project\uff0c the main controller board serves two purposes: central control and Wi-Fi communication.</p>"},{"location":"HARDWARE/MCU/mcu/#main-controller-board-appearance","title":"Main Controller Board Appearance","text":""},{"location":"HARDWARE/MCU/mcu/#main-controller-board-pin-layout","title":"Main Controller Board Pin Layout","text":""},{"location":"HARDWARE/MCU/mcu/#reference-links","title":"Reference Links","text":"<ul> <li> <p> ARDUINO UNO R4 WIFI</p> <p>  LINK </p> </li> </ul>"},{"location":"HARDWARE/POWER/power/","title":"POWER SUPPLY","text":"<p>Power Supply</p> <p>Power supply ensures that the device can operate stably. The Arduino Node can be powered in various ways, including USB, external power adapters, and batteries. Choosing the right power supply method can improve the reliability and performance of the device. This section mainly introduces battery-powered methods to adapt to outdoor environments.</p> <p></p>"},{"location":"HARDWARE/POWER/power/#battery","title":"Battery","text":"<p>As shown in the figure, this project uses two 18650 lithium batteries for power supply. The 18650 lithium battery is a commonly used rechargeable battery with high energy density and long service life. They are typically used in portable electronic devices and power tools.</p>"},{"location":"HARDWARE/POWER/power/#battery-holder","title":"Battery Holder","text":"<p>To facilitate the installation and replacement of batteries, this project uses a 18650 battery holder. The battery holder can accommodate two 18650 lithium batteries and provides the necessary connection interface. It is usually equipped with a switch and indicator light, allowing users to easily control the power supply and check the battery status.</p>"},{"location":"HARDWARE/RADIOFREQUENCY/radiofrequency/","title":"RADIO FREQUENCY","text":"<p>Radio frequency (RF) module nRF24L01 is a low-power, low-cost 2.4GHz wireless transceiver suitable for short-range wireless communication. It supports multiple data rates and multi-channel operation, has strong anti-interference capabilities, and offers a longer transmission distance. Compared to Wifi, radio frequency features low latency, low power consumption, and is more suitable for applications requiring real-time data transmission.</p>"},{"location":"HARDWARE/RADIOFREQUENCY/radiofrequency/#parameters","title":"Parameters","text":"<p>nRF24L01 Technical Specifications</p> Parameter Description Frequency 2.4 GHz ISM band Data Rate 250 kbps / 1 Mbps / 2 Mbps Operating Voltage 1.9V \u2013 3.6V (Recommended: 3.3V) Range Approx. 10\u2013100 meters (depends on antenna) Interface SPI protocol RX Current Approx. 12.3 mA TX Current Approx. 11.3 mA (0 dBm output) Packet Size 1 to 32 bytes Address Width 3 to 5 bytes Features Auto-ACK, Auto-Retransmit, Multichannel RX"},{"location":"HARDWARE/RADIOFREQUENCY/radiofrequency/#wiring","title":"Wiring","text":"Pin Name Description 1 GND Ground 2 VCC Power supply (Recommended 3.3V, no 5V!) 3 CE Chip Enable (mode control: TX/RX switch) 4 CSN SPI Chip Select (active low) 5 SCK SPI Clock Input 6 MOSI Master Out Slave In 7 MISO Master In Slave Out 8 IRQ Interrupt Pin (optional) ```"},{"location":"HARDWARE/RGB-LED/rgbled/","title":"RGB LED","text":"<p>RGB LED</p> <p>RGB LED is a type of LED that can display multiple colors. It typically consists of three independent LEDs that emit red, green, and blue light. By adjusting the brightness of these three colors, various colors can be mixed.</p> <p></p>"},{"location":"HARDWARE/RGB-LED/rgbled/#wiring","title":"Wiring","text":"Arduino Pin 6812 RGB LED Pin V V G G S \uff08D7\uff09 S"},{"location":"HARDWARE/SDCARD/sdcard/","title":"SD CARD MODULE","text":"<p>SD Card Module</p> <p>The SD card module is an external storage device used for data storage. It communicates with Arduino via the SPI interface. The SD card module is typically used to store log data, configuration files, or other data that needs to be persistent.</p> <p></p>"},{"location":"HARDWARE/SDCARD/sdcard/#hardware-connections","title":"Hardware Connections","text":"Arduino Pin SD Card Module Pin 5V VCC GND GND D10 CS D11 MOSI D12 MISO D13 SCK <p>Note</p> <p>It is recommended to use SD cards with a capacity of 32GB or less, formatted in FAT32. Larger capacity SD cards may cause compatibility issues.</p>"},{"location":"HARDWARE/SHIELD/shield/","title":"SENSOR SHIELD","text":"<p>Sensor Shield</p> <p>The Sensor Shield is an expansion board designed for connecting various sensors, providing a rich set of interfaces and functionalities to facilitate sensor data acquisition and processing.</p> <p></p>"},{"location":"HARDWARE/TOUCH-SENSOR/touchsensor/","title":"TOUCH SENSOR","text":"<p>Touch Sensor</p> <p>A touch sensor is a device that detects the presence of a touch or contact with an object. It is commonly used in various electronic devices to enable user interaction.</p> <p></p>"},{"location":"HARDWARE/TOUCH-SENSOR/touchsensor/#wiring","title":"Wiring","text":"Arduino Pin 6812 RGB LED Pin V V G G S \uff08D3\uff09 S"},{"location":"SOFTWARE/software/","title":"SOFTWARE","text":"<p>By programming, we can implement various applications based on hardware functions. Under the condition of introducing various hardware libraries, we can encapsulate commonly used functions into functions for the main program to call. These functions can be divided into several groups: sensing, communication, storage, time control, interaction, etc.</p>"},{"location":"SOFTWARE/FRAMEWORK/framework/","title":"Development Framework","text":"<p>Development Framework</p> <p>For simplicity, this project does not use an RTOS but is developed directly based on the basic model of \"initialization\" and \"loop\" of the microcontroller. On this basis, a state machine model is introduced to manage different states. The core of the framework is the <code>main.cpp</code> file, which contains the basic logic for initialization and looping. Functions for sensing, communication, storage, etc., are encapsulated for easy invocation as needed.</p>"},{"location":"SOFTWARE/FRAMEWORK/framework/#initialization-part","title":"Initialization Part","text":"<p>Initialization is responsible for setting up hardware, configuring peripherals, and initializing various modules. In this project, initialization mainly includes the following aspects:</p> <ul> <li>Hardware configuration: Setting up GPIO, UART, SPI, and other peripheral pins and parameters.</li> <li>Module initialization: Initializing sensors, communication modules (such as Wi-Fi, Bluetooth, etc.), storage modules, etc.</li> <li>System settings: Clock synchronization, system parameter configuration, etc.</li> </ul>"},{"location":"SOFTWARE/FRAMEWORK/framework/#loop-part","title":"Loop Part","text":"<p>The loop part is the core of the program, responsible for continuously executing tasks such as sensing, processing, and communication. In this project, the loop part mainly manages different states through a state machine by monitoring a series of flags. It primarily switches between sensing and communication states, with storage operations included in the sensing operations for simplicity.</p>"},{"location":"SOFTWARE/IDE/ide/","title":"INTEGRATED DEVELOPMENT ENVIRONMENT (IDE)","text":"<p>Arduino Development Environment</p> <p>Arduino development can be done in various ways, with the most common being the Arduino IDE. The Arduino IDE is an open-source integrated development environment specifically designed for Arduino hardware. It provides a simple and user-friendly interface that allows users to write, compile, and upload code to Arduino boards. In recent years, PlatformIO has also become a popular choice; it is a cross-platform IDE that supports multiple development boards and frameworks. PlatformIO offers more powerful features such as library management, debugging support, and various compiler options. PlatformIO is actually a plugin for VSCode, which is a powerful code editor that supports multiple programming languages and extensions. The VSCode plugin ecosystem is very rich, allowing users to enhance its functionality by installing different plugins. Given this, this project uses VSCode + PlatformIO as the primary development environment.</p>"},{"location":"SOFTWARE/IDE/ide/#vscode-installation","title":"VSCode Installation","text":"<ul> <li> <p> VSCode</p> <p>  Download Link </p> </li> </ul>"},{"location":"SOFTWARE/IDE/ide/#platformio-installation","title":"PlatformIO Installation","text":"<ul> <li> <p> PlatformIO Installation</p> <p>  Installation Guidance </p> </li> </ul>"},{"location":"SOFTWARE/IDE/ide/#developing-arduino-projects-with-vscode-platformio","title":"Developing Arduino Projects with VSCode + PlatformIO","text":"<ul> <li> <p> Creating Arduino Projects with PlatformIO</p> <p>  Documentation Tutorial </p> <p>  Video Tutorial </p> </li> </ul>"},{"location":"SOFTWARE/PROGRAMMING/programming/","title":"PROGRAMMING","text":""},{"location":"SOFTWARE/PROGRAMMING/programming/#create-a-new-project","title":"Create a New Project","text":"<p>Generally, if you don't have a project yet, you can create one by following the steps shown in the images:</p> <ol> <li> <p>Click the PlatformIO icon on the left to bring up the PlatformIO panel at the bottom.</p> </li> <li> <p>Click the home icon in the PlatformIO panel to go to the PlatformIO home page.</p> </li> <li> <p>Click the \"New Project\" button, enter the project name, and select the development board and framework.</p> </li> </ol>"},{"location":"SOFTWARE/PROGRAMMING/programming/#import-a-project","title":"Import a Project","text":"<p>If you already have a project, you can open the project folder in the PlatformIO environment. First, we need to obtain the code for this project, which can be done in two ways:</p> <ol> <li>Clone the project code to your local machine using Git. Open a terminal and enter the following command:</li> </ol> <pre><code>git clone https://github.com/Shuaiwen-Cui/ArduinoNode.git\n</code></pre> <ol> <li>Download the project code as a compressed file from GitHub, then unzip it and open the folder.</li> </ol> <p></p>"},{"location":"SOFTWARE/PROGRAMMING/programming/#programming-in-the-ide","title":"Programming in the IDE","text":"<p>After opening the project in PlatformIO, the left side shows the file explorer. The <code>lib</code> folder is particularly important as it contains the libraries used in this project, and the <code>src</code> folder contains the source code. At the bottom of the page are quick access buttons, with three key functions: Compile, Upload, and Serial Monitor.</p>"},{"location":"SOFTWARE/PROGRAMMING/programming/#arduino-programming","title":"Arduino Programming","text":"<p><pre><code>#include &lt;Arduino.h&gt; // unlike Arduino IDE, PlatformIO requires this header file\nvoid setup() \n{\n  // Initialize the serial communication at 9600 baud\n  Serial.begin(9600);\n}\nvoid loop() \n{\n  // Print \"Hello, World!\" to the Serial Monitor\n  Serial.println(\"Hello, World!\");\n\n  // Wait for 1 second (1000 milliseconds)\n  delay(1000);\n}\n</code></pre> In the code above, the basic framework for microcontroller programming consists of \"initialization\" and \"infinite loop,\" which differs from computer programming that requires an exit mechanism. In the Arduino development framework, the <code>setup()</code> function is used for initialization, while the <code>loop()</code> function contains code that runs in an infinite loop. After uploading the code, the microcontroller automatically runs the <code>setup()</code> function once and then enters the <code>loop()</code> function.</p> <pre><code>void setup() \n{\n    // Initialization\n}\n\nvoid loop() \n{\n    // Infinite loop\n}\n</code></pre>"},{"location":"SOFTWARE/SENSING/sensing/","title":"ACCELERATION SENSING USING MPU6050","text":""},{"location":"blog/","title":"Blog","text":""},{"location":"zh/","title":"ArduinoNode","text":"<p>\u8fd9\u4e2a\u9879\u76ee\u5c55\u793a\u5982\u4f55\u4f7f\u7528Arduino Uno R4 WiFi\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u7269\u8054\u7f51\u65e0\u7ebf\u4f20\u611f\u5668\u8282\u70b9/\u7f51\u7edc\u3002</p> <p></p>"},{"location":"zh/DATASHEET/datasheet/","title":"\u6570\u636e\u624b\u518c","text":""},{"location":"zh/DATASHEET/datasheet/#_2","title":"\u4e3b\u63a7","text":"\u9879\u76ee \u53c2\u6570 \u4e3b\u63a7\u82af\u7247 Renesas RA4M1 \u8fd0\u884c\u9891\u7387 48 MHz \u8fd0\u884c\u5185\u5b58 32 KB \u5b58\u50a8 256 KB"},{"location":"zh/DATASHEET/datasheet/#_3","title":"\u52a0\u901f\u5ea6\u6d4b\u91cf","text":"\u9879\u76ee \u53c2\u6570 \u52a0\u901f\u5ea6\u4f20\u611f\u5668 MPU6050 \u6d4b\u91cf\u8303\u56f4 \u00b12g / \u00b14g / \u00b18g / \u00b116g \u5206\u8fa8\u7387 16 \u4f4d \u566a\u58f0\u5bc6\u5ea6 0.0004 g/\u221aHz \u5178\u578b\u91c7\u6837\u5bb9\u91cf 100 Hz \u00d7 25 \u79d2 / 50 Hz \u00d7 50 \u79d2"},{"location":"zh/DATASHEET/datasheet/#_4","title":"\u65e0\u7ebf\u901a\u4fe1","text":"<ul> <li>WiFi</li> <li>nRF24L01</li> </ul>"},{"location":"zh/DATASHEET/datasheet/#_5","title":"\u5b58\u50a8","text":"<ul> <li>32GB SD \u5361</li> </ul>"},{"location":"zh/DATASHEET/datasheet/#_6","title":"\u7535\u6e90","text":"<ul> <li>\u5de5\u4f5c\u7535\u538b\uff1a5V</li> <li>\u7535\u6e90\u6a21\u5757\u4f9b\u7535\uff1a3.7V \u9502\u7535\u6c60\uff0818650\uff09\u00d7 2</li> </ul>"},{"location":"zh/HARDWARE/hardware/","title":"\u786c\u4ef6","text":"<p>\u7ec4\u4ef6\u5217\u8868\uff1a</p> \u7ec4\u4ef6 \u63cf\u8ff0 Arduino UNO R4 WiFi \u8282\u70b9\u7684\u4e3b\u63a7\u5236\u5668\uff0c\u63d0\u4f9b\u5904\u7406\u80fd\u529b\u548c\u8fde\u63a5\u6027\u3002 Sensor Shield \u8fde\u63a5\u5230Arduino\u7684\u6269\u5c55\u677f\uff0c\u4fbf\u4e8e\u4f20\u611f\u5668\u96c6\u6210\u3002 MPU6050 \u4e00\u4e2a\u52a0\u901f\u5ea6\u4f20\u611f\u5668\uff0c\u7528\u4e8e\u6d4b\u91cf\u8fd0\u52a8\u548c\u65b9\u5411\u3002 SD\u6a21\u5757\u548c\u5361 \u7528\u4e8e\u6570\u636e\u5b58\u50a8\uff0c\u4f7f\u8282\u70b9\u80fd\u591f\u8bb0\u5f55\u4f20\u611f\u5668\u6570\u636e\u3002 RGB LED \u63d0\u4f9b\u89c6\u89c9\u53cd\u9988\uff0c\u6307\u793a\u8282\u70b9\u7684\u72b6\u6001\u3002 \u89e6\u6478\u4f20\u611f\u5668 \u5141\u8bb8\u7528\u6237\u4ea4\u4e92\uff0c\u542f\u7528\u5bf9\u8282\u70b9\u7684\u63a7\u5236\u3002 NRF24L01\u6a21\u5757\u548c\u5929\u7ebf \u4f7f\u8282\u70b9\u4e4b\u95f4\u80fd\u591f\u8fdb\u884c\u672c\u5730\u65e0\u7ebf\u901a\u4fe1\u3002 BMS\u548c\u7535\u6c60 \u4e3a\u6574\u4e2a\u8282\u70b9\u63d0\u4f9b\u7535\u6e90\uff0c\u4f7f\u5176\u4fbf\u643a\u3002 <p>Note</p> <p>\u8fd9\u4e9b\u7ec4\u4ef6\u5171\u540c\u6784\u6210\u4e86\u4e00\u4e2a\u529f\u80fd\u9f50\u5168\u7684\u7269\u8054\u7f51\u65e0\u7ebf\u4f20\u611f\u5668\u8282\u70b9\uff0c\u80fd\u591f\u6536\u96c6\u6570\u636e\u3001\u5b58\u50a8\u4fe1\u606f\u5e76\u901a\u8fc7\u65e0\u7ebf\u7f51\u7edc\u8fdb\u884c\u901a\u4fe1\u3002\u6bcf\u4e2a\u7ec4\u4ef6\u5728\u7cfb\u7edf\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u7684\u89d2\u8272\uff0c\u786e\u4fdd\u8282\u70b9\u7684\u9ad8\u6548\u8fd0\u884c\u548c\u53ef\u9760\u6027\u3002</p>"},{"location":"zh/HARDWARE/ACCELERATION/acceleration/","title":"\u52a0\u901f\u5ea6\u8ba1","text":"<p>MPU6050</p> <p>The MPU6050 \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u60ef\u6027\u6d4b\u91cf\u5355\u5143\uff08IMU\uff09\uff0c\u96c6\u6210\u4e86\u4e00\u4e2a\u4e09\u8f74\u9640\u87ba\u4eea\u548c\u4e00\u4e2a\u4e09\u8f74\u52a0\u901f\u5ea6\u8ba1\u3002\u5b83\u5e7f\u6cdb\u5e94\u7528\u4e8e\u673a\u5668\u4eba\u3001\u65e0\u4eba\u673a\u548c\u8fd0\u52a8\u8ddf\u8e2a\u7b49\u5404\u79cd\u5e94\u7528\u4e2d\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u4f7f\u7528 MPU6050 \u7684\u52a0\u901f\u5ea6\u8ba1\u90e8\u5206\u6765\u6d4b\u91cf\u4e09\u4e2a\u8f74\uff08X\u3001Y\u3001Z\uff09\u7684\u52a0\u901f\u5ea6\u3002</p> <p></p>"},{"location":"zh/HARDWARE/ACCELERATION/acceleration/#_2","title":"\u89c4\u683c","text":"\u7279\u6027 \u89c4\u683c \u5de5\u4f5c\u7535\u538b 3.3V \u81f3 5V \u901a\u4fe1\u63a5\u53e3 I2C \u6d4b\u91cf\u8303\u56f4 \u00b12g, \u00b14g, \u00b18g, \u00b116g\uff08\u53ef\u914d\u7f6e\uff09 \u5206\u8fa8\u7387 16 \u4f4d \u7075\u654f\u5ea6 16384 LSB/g\uff08\u5bf9\u4e8e \u00b12g \u8303\u56f4\uff09"},{"location":"zh/HARDWARE/ACCELERATION/acceleration/#_3","title":"\u63a5\u7ebf","text":"<p>MPU6050 \u7684\u63a5\u7ebf\u975e\u5e38\u7b80\u5355\u3002\u5b83\u901a\u5e38\u4f7f\u7528 I2C \u534f\u8bae\u8fdb\u884c\u901a\u4fe1\uff0c\u8fd9\u9700\u8981\u4e24\u4e2a\u989d\u5916\u7684\u7ebf\uff08SDA \u548c SCL\uff09\uff0c\u4ee5\u53ca\u7535\u6e90\u548c\u5730\u7ebf\u8fde\u63a5\u3002</p> <p></p> MCU \u5f15\u811a MPU6050 \u5f15\u811a VCC VCC GND GND SDA SDA SCL SCL -- INT <p>\u6ce8\u610f</p> <p>INT \u5f15\u811a\u662f\u53ef\u9009\u7684\uff0c\u53ef\u4ee5\u7528\u4e8e\u4e2d\u65ad\u9a71\u52a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5bf9\u4e8e\u57fa\u672c\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u7559\u7a7a\u3002\u5728\u672c\u9879\u76ee\u4e2d\uff0c\u6211\u4eec\u4e0d\u4f1a\u4f7f\u7528 INT \u5f15\u811a\u3002</p>"},{"location":"zh/HARDWARE/MCU/mcu/","title":"\u4e3b\u63a7\u677f","text":"<p>\u4e3b\u63a7\u677f</p> <p>\u5728\u672c\u9879\u76ee\u4e2d\uff0c\u4e3b\u63a7\u677f\u8d77\u5230\u4e24\u65b9\u9762\u4f5c\u7528\uff1a\u4e00\u662f\u6838\u5fc3\u63a7\u5236\uff0c\u800c\u662fwifi\u901a\u4fe1\u3002</p>"},{"location":"zh/HARDWARE/MCU/mcu/#_2","title":"\u4e3b\u63a7\u677f\u5916\u89c2","text":""},{"location":"zh/HARDWARE/MCU/mcu/#_3","title":"\u4e3b\u63a7\u677f\u9488\u811a\u6392\u5e03","text":""},{"location":"zh/HARDWARE/MCU/mcu/#_4","title":"\u53c2\u8003\u94fe\u63a5","text":"<ul> <li> <p> ARDUINO UNO R4 WIFI</p> <p>  \u94fe\u63a5 </p> </li> </ul>"},{"location":"zh/HARDWARE/POWER/power/","title":"\u7535\u6e90\u4f9b\u5e94","text":"<p>\u7535\u6e90\u4f9b\u5e94</p> <p>\u7535\u6e90\u4f9b\u5e94\u786e\u4fdd\u8bbe\u5907\u80fd\u591f\u7a33\u5b9a\u8fd0\u884c\u3002Arduino Node\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u4f9b\u7535\uff0c\u5305\u62ecUSB\u3001\u5916\u90e8\u7535\u6e90\u9002\u914d\u5668\u548c\u7535\u6c60\u3002\u9009\u62e9\u5408\u9002\u7684\u7535\u6e90\u4f9b\u5e94\u65b9\u5f0f\u53ef\u4ee5\u63d0\u9ad8\u8bbe\u5907\u7684\u53ef\u9760\u6027\u548c\u6027\u80fd\u3002\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u7535\u6c60\u4f9b\u7535\u65b9\u5f0f\u4ee5\u9002\u5e94\u6237\u5916\u73af\u5883\u3002</p> <p></p>"},{"location":"zh/HARDWARE/POWER/power/#_2","title":"\u7535\u6c60","text":"<p>\u5982\u56fe\u6240\u793a\uff0c\u672c\u9879\u76ee\u91c7\u7528\u4e24\u828218650\u9502\u7535\u6c60\u8fdb\u884c\u4f9b\u7535\u300218650\u9502\u7535\u6c60\u662f\u4e00\u79cd\u5e38\u7528\u7684\u53ef\u5145\u7535\u7535\u6c60\uff0c\u5177\u6709\u8f83\u9ad8\u7684\u80fd\u91cf\u5bc6\u5ea6\u548c\u8f83\u957f\u7684\u4f7f\u7528\u5bff\u547d\u3002\u5b83\u4eec\u901a\u5e38\u7528\u4e8e\u4fbf\u643a\u5f0f\u7535\u5b50\u8bbe\u5907\u548c\u7535\u52a8\u5de5\u5177\u7b49\u3002</p>"},{"location":"zh/HARDWARE/POWER/power/#_3","title":"\u7535\u6c60\u76d2","text":"<p>\u4e3a\u4e86\u65b9\u4fbf\u5b89\u88c5\u548c\u66f4\u6362\u7535\u6c60\uff0c\u672c\u9879\u76ee\u4f7f\u7528\u4e86\u4e00\u4e2a18650\u7535\u6c60\u76d2\u3002\u7535\u6c60\u76d2\u53ef\u4ee5\u5bb9\u7eb3\u4e24\u828218650\u9502\u7535\u6c60\uff0c\u5e76\u63d0\u4f9b\u5fc5\u8981\u7684\u8fde\u63a5\u63a5\u53e3\u3002\u5b83\u901a\u5e38\u914d\u6709\u5f00\u5173\u548c\u6307\u793a\u706f\uff0c\u4ee5\u4fbf\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5730\u63a7\u5236\u7535\u6e90\u548c\u67e5\u770b\u7535\u6c60\u72b6\u6001\u3002</p>"},{"location":"zh/HARDWARE/RADIOFREQUENCY/radiofrequency/","title":"\u5c04\u9891","text":"<p>\u5c04\u9891\u6a21\u5757nRF24L01\u662f\u4e00\u4e2a\u4f4e\u529f\u8017\u3001\u4f4e\u6210\u672c\u76842.4GHz\u65e0\u7ebf\u6536\u53d1\u5668\uff0c\u9002\u7528\u4e8e\u77ed\u8ddd\u79bb\u65e0\u7ebf\u901a\u4fe1\u3002\u5b83\u652f\u6301\u591a\u79cd\u6570\u636e\u901f\u7387\u548c\u591a\u901a\u9053\u64cd\u4f5c\uff0c\u5177\u6709\u8f83\u5f3a\u7684\u6297\u5e72\u6270\u80fd\u529b\u548c\u8f83\u957f\u7684\u4f20\u8f93\u8ddd\u79bb\u3002\u4e0eWifi\u76f8\u6bd4\uff0c\u5c04\u9891\u5177\u6709\u4f4e\u5ef6\u8fdf\u3001\u4f4e\u529f\u8017\u7b49\u7279\u70b9\uff0c\u66f4\u9002\u5408\u9700\u8981\u5b9e\u65f6\u6570\u636e\u4f20\u8f93\u7684\u5e94\u7528\u573a\u666f\u3002</p>"},{"location":"zh/HARDWARE/RADIOFREQUENCY/radiofrequency/#_2","title":"\u53c2\u6570","text":"<p>nRF24L01 \u6280\u672f\u53c2\u6570</p> \u53c2\u6570 \u8bf4\u660e \u5de5\u4f5c\u9891\u7387 2.4 GHz ISM\u9891\u6bb5 \u901a\u4fe1\u901f\u7387 250 kbps / 1 Mbps / 2 Mbps \u5de5\u4f5c\u7535\u538b 1.9V \u2013 3.6V\uff08\u63a8\u8350 3.3V\uff09 \u901a\u4fe1\u8ddd\u79bb \u7ea6 10\uff5e100 \u7c73\uff08\u53d6\u51b3\u4e8e\u5929\u7ebf\u548c\u73af\u5883\uff09 \u63a5\u53e3\u534f\u8bae SPI \u63a5\u6536\u7535\u6d41 \u7ea6 12.3 mA \u53d1\u9001\u7535\u6d41 \u7ea6 11.3 mA\uff080 dBm\u8f93\u51fa\uff09 \u6570\u636e\u5305\u957f\u5ea6 1\uff5e32 \u5b57\u8282 \u5730\u5740\u5bbd\u5ea6 3\uff5e5 \u5b57\u8282 \u7279\u6027\u652f\u6301 \u81ea\u52a8\u5e94\u7b54\u3001\u81ea\u52a8\u91cd\u53d1\u3001\u591a\u901a\u9053\u63a5\u6536"},{"location":"zh/HARDWARE/RADIOFREQUENCY/radiofrequency/#_3","title":"\u63a5\u7ebf","text":"\u5f15\u811a \u540d\u79f0 \u8bf4\u660e 1 GND \u5730\u7ebf 2 VCC \u7535\u6e90\uff08\u63a8\u8350 3.3V\uff0c\u4e25\u7981\u63a5 5V\uff09 3 CE \u6a21\u5f0f\u63a7\u5236\u5f15\u811a\uff08\u53d1\u9001/\u63a5\u6536\u5207\u6362\uff09 4 CSN SPI\u7247\u9009\u5f15\u811a\uff08\u4f4e\u7535\u5e73\u6709\u6548\uff09 5 SCK SPI\u65f6\u949f\u8f93\u5165 6 MOSI SPI\u4e3b\u8bbe\u5907\u8f93\u51fa\uff0c\u4ece\u8bbe\u5907\u8f93\u5165 7 MISO SPI\u4e3b\u8bbe\u5907\u8f93\u5165\uff0c\u4ece\u8bbe\u5907\u8f93\u51fa 8 IRQ \u4e2d\u65ad\u5f15\u811a\uff08\u53ef\u9009\uff09"},{"location":"zh/HARDWARE/RGB-LED/rgbled/","title":"RGB LED","text":"<p>RGB LED</p> <p>RGB LED \u662f\u4e00\u79cd\u53ef\u4ee5\u663e\u793a\u591a\u79cd\u989c\u8272\u7684 LED \u706f\u3002\u5b83\u901a\u5e38\u7531\u4e09\u4e2a\u72ec\u7acb\u7684 LED \u7ec4\u6210\uff0c\u5206\u522b\u53d1\u51fa\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\u5149\u3002\u901a\u8fc7\u8c03\u8282\u8fd9\u4e09\u79cd\u989c\u8272\u7684\u4eae\u5ea6\uff0c\u53ef\u4ee5\u6df7\u5408\u51fa\u5404\u79cd\u989c\u8272\u3002</p> <p></p>"},{"location":"zh/HARDWARE/RGB-LED/rgbled/#_1","title":"\u8fde\u63a5\u65b9\u5f0f","text":"Arduino \u5f15\u811a 6812 RGB LED \u5f15\u811a V V G G S \uff08D7\uff09 S"},{"location":"zh/HARDWARE/SDCARD/sdcard/","title":"SD\u5361\u6a21\u5757","text":"<p>SD\u5361\u6a21\u5757</p> <p>SD\u5361\u6a21\u5757\u662f\u4e00\u4e2a\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u7684\u5916\u90e8\u5b58\u50a8\u8bbe\u5907\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7SPI\u63a5\u53e3\u4e0eArduino\u8fdb\u884c\u901a\u4fe1\u3002SD\u5361\u6a21\u5757\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u65e5\u5fd7\u6570\u636e\u3001\u914d\u7f6e\u6587\u4ef6\u6216\u5176\u4ed6\u9700\u8981\u6301\u4e45\u5316\u7684\u6570\u636e\u3002</p> <p></p>"},{"location":"zh/HARDWARE/SDCARD/sdcard/#_1","title":"\u786c\u4ef6\u8fde\u63a5","text":"Arduino \u5f15\u811a SD\u5361\u6a21\u5757\u5f15\u811a 5V VCC GND GND D10 CS D11 MOSI D12 MISO D13 SCK <p>\u6ce8\u610f</p> <p>SD\u5361\u5bb9\u91cf\u63a8\u8350\u572832GB\u4ee5\u4e0b\uff0c\u4f7f\u7528FAT32\u683c\u5f0f\u5316\u3002\u5927\u5bb9\u91cfSD\u5361\u53ef\u80fd\u4f1a\u5bfc\u81f4\u517c\u5bb9\u6027\u95ee\u9898\u3002</p>"},{"location":"zh/HARDWARE/SHIELD/shield/","title":"\u4f20\u611f\u5668\u6269\u5c55\u677f","text":"<p>\u4f20\u611f\u5668\u6269\u5c55\u677f</p> <p>\u4f20\u611f\u5668\u6269\u5c55\u677f\u662f\u4e00\u4e2a\u7528\u4e8e\u8fde\u63a5\u5404\u79cd\u4f20\u611f\u5668\u7684\u6269\u5c55\u677f\uff0c\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u63a5\u53e3\u548c\u529f\u80fd\uff0c\u65b9\u4fbf\u7528\u6237\u8fdb\u884c\u4f20\u611f\u5668\u6570\u636e\u91c7\u96c6\u548c\u5904\u7406\u3002</p> <p></p>"},{"location":"zh/HARDWARE/TOUCH-SENSOR/touchsensor/","title":"\u89e6\u6478\u4f20\u611f\u5668","text":"<p>\u89e6\u6478\u4f20\u611f\u5668</p> <p>\u89e6\u6478\u4f20\u611f\u5668\u662f\u4e00\u79cd\u80fd\u591f\u68c0\u6d4b\u7269\u4f53\u63a5\u89e6\u7684\u4f20\u611f\u5668\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u5404\u79cd\u7535\u5b50\u8bbe\u5907\u4e2d\uff0c\u4ee5\u5b9e\u73b0\u7528\u6237\u4ea4\u4e92\u529f\u80fd\u3002</p> <p></p>"},{"location":"zh/HARDWARE/TOUCH-SENSOR/touchsensor/#_2","title":"\u8fde\u63a5\u65b9\u5f0f","text":"Arduino \u5f15\u811a 6812 RGB LED \u5f15\u811a V V G G S \uff08D3\uff09 S"},{"location":"zh/SOFTWARE/software/","title":"\u8f6f\u4ef6","text":"<p>\u901a\u8fc7\u7f16\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u57fa\u4e8e\u786c\u4ef6\u529f\u80fd\u5b9e\u73b0\u5404\u79cd\u5e94\u7528\uff0c\u5728\u5f15\u5165\u5404\u786c\u4ef6\u5e93\u7684\u6761\u4ef6\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u8f83\u4e3a\u7b80\u5355\u5730\u5c06\u5e38\u7528\u529f\u80fd\u5c01\u88c5\u4e3a\u51fd\u6570\uff0c\u4f9b\u4e3b\u7a0b\u5e8f\u8c03\u7528\u3002\u8fd9\u4e9b\u529f\u80fd\u53ef\u4ee5\u88ab\u5206\u4e3a\u51e0\u4e2a\u7ec4\uff1a\u4f20\u611f\u3001\u901a\u8baf\u3001\u5b58\u50a8\u3001\u65f6\u95f4\u63a7\u5236\u3001\u4ea4\u4e92\u7b49\u3002</p>"},{"location":"zh/SOFTWARE/FRAMEWORK/framework/","title":"\u5f00\u53d1\u6846\u67b6","text":"<p>\u6846\u67b6\u6982\u8ff0</p> <p>\u7b80\u5355\u8d77\u89c1\uff0c\u672c\u9879\u76ee\u6ca1\u6709\u5f15\u5165RTOS\uff0c\u800c\u662f\u76f4\u63a5\u57fa\u4e8e\u5355\u7247\u673a\u7684\"\u521d\u59cb\u5316\"\u548c\"\u5faa\u73af\"\u7684\u57fa\u672c\u6a21\u578b\u6765\u8fdb\u884c\u5f00\u53d1\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u5f15\u5165\u4e86\u72b6\u6001\u673a\u6a21\u578b\u6765\u7ba1\u7406\u4e0d\u540c\u7684\u72b6\u6001\u3002\u6846\u67b6\u7684\u6838\u5fc3\u662f<code>main.cpp</code>\u6587\u4ef6\uff0c\u91cc\u9762\u5305\u542b\u4e86\u521d\u59cb\u5316\u548c\u5faa\u73af\u7684\u57fa\u672c\u903b\u8f91\u3002\u4f20\u611f\uff0c\u901a\u4fe1\uff0c\u5b58\u50a8\u7b49\u529f\u80fd\u90fd\u5c01\u88c5\u4e3a\u4e86\u51fd\u6570\uff0c\u65b9\u4fbf\u6309\u9700\u8c03\u7528\u3002</p>"},{"location":"zh/SOFTWARE/FRAMEWORK/framework/#_2","title":"\u521d\u59cb\u5316\u90e8\u5206","text":"<p>\u521d\u59cb\u5316\u90e8\u5206\u8d1f\u8d23\u8bbe\u7f6e\u786c\u4ef6\u3001\u914d\u7f6e\u5916\u8bbe\u4ee5\u53ca\u521d\u59cb\u5316\u5404\u79cd\u6a21\u5757\u3002\u5728\u672c\u9879\u76ee\u4e2d\uff0c\u521d\u59cb\u5316\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a</p> <ul> <li>\u786c\u4ef6\u914d\u7f6e\uff1a\u8bbe\u7f6eGPIO\u3001UART\u3001SPI\u7b49\u5916\u8bbe\u7684\u5f15\u811a\u548c\u53c2\u6570\u3002</li> <li>\u6a21\u5757\u521d\u59cb\u5316\uff1a\u521d\u59cb\u5316\u4f20\u611f\u5668\u3001\u901a\u4fe1\u6a21\u5757\uff08\u5982Wi-Fi\u3001\u84dd\u7259\u7b49\uff09\u3001\u5b58\u50a8\u6a21\u5757\u7b49\u3002</li> <li>\u7cfb\u7edf\u8bbe\u7f6e\uff1a\u65f6\u949f\u540c\u6b65\u3001\u7cfb\u7edf\u53c2\u6570\u914d\u7f6e\u7b49\u3002</li> </ul>"},{"location":"zh/SOFTWARE/FRAMEWORK/framework/#_3","title":"\u5faa\u73af\u90e8\u5206","text":"<p>\u5faa\u73af\u90e8\u5206\u662f\u7a0b\u5e8f\u7684\u6838\u5fc3\uff0c\u8d1f\u8d23\u4e0d\u65ad\u5730\u6267\u884c\u4f20\u611f\u3001\u5904\u7406\u548c\u901a\u4fe1\u7b49\u4efb\u52a1\u3002\u5728\u672c\u9879\u76ee\u4e2d\uff0c\u5faa\u73af\u90e8\u5206\u4e3b\u8981\u901a\u8fc7\u76d1\u6d4b\u4e00\u7cfb\u5217\u6807\u5fd7\u91cf\u901a\u8fc7\u72b6\u6001\u673a\u6765\u7ba1\u7406\u4e0d\u540c\u7684\u72b6\u6001\u3002\u5176\u4e3b\u8981\u5728\u901a\u4fe1\u548c\u4f20\u611f\u72b6\u6001\u95f4\u5207\u6362\uff0c\u5176\u4e2d\u5b58\u50a8\u64cd\u4f5c\u7b80\u5355\u8d77\u89c1\u5305\u62ec\u5728\u4f20\u611f\u64cd\u4f5c\u4e2d\u7684\u3002</p>"},{"location":"zh/SOFTWARE/IDE/ide/","title":"\u96c6\u6210\u5f00\u53d1\u73af\u5883","text":"<p>Arduino \u5f00\u53d1\u73af\u5883</p> <p>Arduino\u7684\u5f00\u53d1\u6709\u591a\u79cd\u65b9\u5f0f\uff0c\u6700\u5e38\u89c1\u7684\u65b9\u5f0f\u662f\u4f7f\u7528Arduino IDE\u3002Arduino IDE\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff0c\u4e13\u4e3aArduino\u786c\u4ef6\u8bbe\u8ba1\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684\u754c\u9762\uff0c\u5141\u8bb8\u7528\u6237\u7f16\u5199\u3001\u7f16\u8bd1\u548c\u4e0a\u4f20\u4ee3\u7801\u5230Arduino\u677f\u4e0a\u3002\u8fd1\u5e74\u6765PlatformIO\u4e5f\u6210\u4e3a\u4e86\u4e00\u4e2a\u6d41\u884c\u7684\u9009\u62e9\uff0c\u5b83\u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684IDE\uff0c\u652f\u6301\u591a\u79cd\u5f00\u53d1\u677f\u548c\u6846\u67b6\u3002PlatformIO\u63d0\u4f9b\u4e86\u66f4\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u5982\u5e93\u7ba1\u7406\u3001\u8c03\u8bd5\u652f\u6301\u548c\u591a\u79cd\u7f16\u8bd1\u5668\u9009\u9879\u3002PlatfromIO\u5b9e\u9645\u4e0a\u662fVSCode\u4e2d\u7684\u4e00\u4e2a\u63d2\u4ef6\uff0cVSCode\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u4ee3\u7801\u7f16\u8f91\u5668\uff0c\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u548c\u6269\u5c55\u3002VSCode\u7684\u63d2\u4ef6\u751f\u6001\u7cfb\u7edf\u975e\u5e38\u4e30\u5bcc\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5\u4e0d\u540c\u7684\u63d2\u4ef6\u6765\u589e\u5f3a\u5176\u529f\u80fd\u3002\u9274\u4e8e\u6b64\uff0c\u672c\u9879\u76ee\u91c7\u7528VSCode+PlatformIO\u4f5c\u4e3a\u4e3b\u8981\u7684\u5f00\u53d1\u73af\u5883\u3002</p>"},{"location":"zh/SOFTWARE/IDE/ide/#vscode","title":"VSCode\u5b89\u88c5","text":"<ul> <li> <p> VSCode</p> <p>  \u4e0b\u8f7d\u94fe\u63a5 </p> </li> </ul>"},{"location":"zh/SOFTWARE/IDE/ide/#platformio","title":"PlatformIO\u5b89\u88c5","text":"<ul> <li> <p> PlatformIO \u5b89\u88c5\u8bf4\u660e</p> <p>  \u4e0b\u8f7d\u94fe\u63a5 </p> </li> </ul>"},{"location":"zh/SOFTWARE/IDE/ide/#vscodeplatformioarduino","title":"\u4f7f\u7528VSCode+PlatformIO\u5f00\u53d1Arduino\u9879\u76ee","text":"<ul> <li> <p> PlatformIO \u521b\u5efa Arduino \u9879\u76ee</p> <p>  \u6587\u6863\u6559\u7a0b </p> <p>  \u89c6\u9891\u6559\u7a0b </p> </li> </ul>"},{"location":"zh/SOFTWARE/PROGRAMMING/programming/","title":"\u7f16\u7a0b","text":""},{"location":"zh/SOFTWARE/PROGRAMMING/programming/#_2","title":"\u521b\u5efa\u9879\u76ee","text":"<p>Tip</p> <p>\u672c\u9879\u76ee\u5176\u5b9e\u4e0d\u9700\u8981\u521b\u5efa\u9879\u76ee\uff0c\u8fd9\u4e00\u90e8\u5206\u53ea\u662f\u4e3a\u4e86\u8ba9\u8bfb\u8005\u4e86\u89e3\u5982\u4f55\u4f7f\u7528PlatformIO\u521b\u5efa\u9879\u76ee\u3002</p> <p></p> <p></p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\u9879\u76ee\uff0c\u53ef\u4ee5\u901a\u8fc7\u6309\u7167\u56fe\u793a\u7684\u6b65\u9aa4\u6765\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\uff1a</p> <ol> <li> <p>\u70b9\u51fb\u5de6\u4fa7\u7684platformio\u56fe\u6807\u5524\u51fa\u5e95\u90e8\u7684platformio\u56fe\u6807\u3002</p> </li> <li> <p>\u70b9\u51fb\u5e95\u90e8\u7684platformio\u7684\u4e3b\u9875\u56fe\u6807\uff0c\u8fdb\u5165platformio\u4e3b\u9875\u3002</p> </li> <li> <p>\u70b9\u51fb\u65b0\u5efa\u9879\u76ee\u6309\u94ae\uff0c\u8f93\u5165\u9879\u76ee\u540d\u79f0\u548c\u9009\u62e9\u5f00\u53d1\u7248\u548c\u5f00\u53d1\u6846\u67b6\u3002</p> </li> </ol>"},{"location":"zh/SOFTWARE/PROGRAMMING/programming/#_3","title":"\u5bfc\u5165\u9879\u76ee","text":"<p>\u5982\u679c\u5df2\u7ecf\u6709\u9879\u76ee\uff0c\u53ea\u9700\u8981\u5728platformio\u73af\u5883\u4e0b\u6253\u5f00\u9879\u76ee\u6587\u4ef6\u5939\u5373\u53ef\u3002\u9996\u5148\u6211\u4eec\u83b7\u53d6\u672c\u9879\u76ee\u6587\u4ef6\u4ee3\u7801, \u6709\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <ol> <li>\u4f7f\u7528git\u514b\u9686\u672c\u9879\u76ee\u4ee3\u7801\u5230\u672c\u5730\u3002\u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a</li> </ol> <pre><code>git clone https://github.com/Shuaiwen-Cui/ArduinoNode.git\n</code></pre> <ol> <li>\u76f4\u63a5\u4e0b\u8f7d\u672c\u9879\u76ee\u7684\u4ee3\u7801\u538b\u7f29\u5305\uff0c\u89e3\u538b\u540e\u6253\u5f00\u3002</li> </ol> <p></p>"},{"location":"zh/SOFTWARE/PROGRAMMING/programming/#ide","title":"\u5728IDE\u4e2d\u7f16\u7a0b","text":"<p>\u5982\u56fe\u6240\u793a\uff0c\u5728PlatformIO\u4e2d\u6253\u5f00\u9879\u76ee\u540e\uff0c\u5de6\u4fa7\u662f\u6587\u4ef6\u6d4f\u89c8\u5668\uff0c\u6bd4\u8f83\u91cd\u8981\u7684\u662f<code>lib</code>\u6587\u4ef6\u5939\uff0c\u91cc\u9762\u5b58\u653e\u4e86\u672c\u9879\u76ee\u7684\u5e93\u6587\u4ef6, \u8fd8\u6709<code>src</code>\u6587\u4ef6\u5939\uff0c\u91cc\u9762\u5b58\u653e\u4e86\u672c\u9879\u76ee\u7684\u6e90\u4ee3\u7801\u3002\u5728\u9875\u9762\u5e95\u90e8\u662f\u5feb\u6377\u6309\u94ae\uff0c\u6bd4\u8f83\u91cd\u8981\u7684\u6709\u4e09\u4e2a\uff0c\u7f16\u8bd1\uff0c\u4e0a\u4f20\u548c\u4e32\u53e3\u76d1\u89c6\u5668\u3002</p>"},{"location":"zh/SOFTWARE/PROGRAMMING/programming/#arduino","title":"Arduino\u7f16\u7a0b","text":"<pre><code>#include &lt;Arduino.h&gt; // unlike Arduino IDE, PlatformIO requires this header file\n\nvoid setup() \n{\n  // Initialize the serial communication at 9600 baud\n  Serial.begin(9600);\n}\n\nvoid loop() \n{\n  // Print \"Hello, World!\" to the Serial Monitor\n  Serial.println(\"Hello, World!\");\n\n  // Wait for 1 second (1000 milliseconds)\n  delay(1000);\n}\n</code></pre> <p>\u5982\u4e0a\u9762\u4ee3\u7801\u6240\u793a\uff0c\u5355\u7247\u673a\u7f16\u7a0b\u7684\u57fa\u672c\u6846\u67b6\u662f\u201c\u521d\u59cb\u5316\u201d\u52a0\u4e0a\u201c\u65e0\u9650\u5faa\u73af\u201d\uff0c\u8fd9\u4e00\u70b9\u4e0e\u7535\u8111\u7f16\u7a0b\u8981\u6c42\u5fc5\u987b\u6709\u9000\u51fa\u673a\u5236\u4e0d\u540c\u3002\u5728Arduino\u5f00\u53d1\u6846\u67b6\u4e0b\uff0c<code>setup()</code>\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316\uff0c\u800c<code>loop()</code>\u51fd\u6570\u5219\u662f\u65e0\u9650\u5faa\u73af\u6267\u884c\u7684\u4ee3\u7801\u3002\u6bcf\u6b21\u4e0a\u4f20\u4ee3\u7801\u540e\uff0c\u5355\u7247\u673a\u4f1a\u81ea\u52a8\u8fd0\u884c<code>setup()</code>\u51fd\u6570\u4e00\u6b21\uff0c\u7136\u540e\u8fdb\u5165<code>loop()</code>\u51fd\u6570\u3002</p> <pre><code>void setup() \n{\n    // Initialization\n}\n\nvoid loop() \n{\n    // Infinite loop\n}\n</code></pre>"},{"location":"zh/SOFTWARE/SENSING/sensing/","title":"\u4f7f\u7528MPU6050\u8fdb\u884c\u52a0\u901f\u5ea6\u4f20\u611f","text":""},{"location":"zh/SOFTWARE/SENSING/sensing/#_1","title":"\u786c\u4ef6\u4f9d\u8d56","text":"<ul> <li>MPU6050\u4f20\u611f\u5668\u6a21\u5757</li> </ul>"},{"location":"zh/SOFTWARE/SENSING/sensing/#_2","title":"\u8f6f\u4ef6\u4f9d\u8d56","text":"<ul> <li>SPI \u5e93</li> <li>MPU6050 \u5e93</li> </ul>"}]}